$version Generated by VerilatedVcd $end
$date Sat Mar  4 22:35:02 2023 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 %" clk $end
  $var wire  8 '" cnn_data_in [7:0] $end
  $var wire  1 (" cnn_data_in_valid $end
  $var wire  1 &" rst_n $end
  $scope module conv1 $end
   $var wire  1 %" clk $end
   $var wire  8 '" cnn_data_in [7:0] $end
   $var wire  1 (" cnn_data_in_valid $end
   $var wire 32 < i [31:0] $end
   $var wire 32 = j [31:0] $end
   $var wire  5 #" rd_addr [4:0] $end
   $var wire  5 $" rd_addr_pre2 [4:0] $end
   $var wire  1 &" rst_n $end
   $var wire  8 # window(0)(0) [7:0] $end
   $var wire  8 $ window(0)(1) [7:0] $end
   $var wire  8 % window(0)(2) [7:0] $end
   $var wire  8 & window(0)(3) [7:0] $end
   $var wire  8 ' window(0)(4) [7:0] $end
   $var wire  8 ( window(1)(0) [7:0] $end
   $var wire  8 ) window(1)(1) [7:0] $end
   $var wire  8 * window(1)(2) [7:0] $end
   $var wire  8 + window(1)(3) [7:0] $end
   $var wire  8 , window(1)(4) [7:0] $end
   $var wire  8 - window(2)(0) [7:0] $end
   $var wire  8 . window(2)(1) [7:0] $end
   $var wire  8 / window(2)(2) [7:0] $end
   $var wire  8 0 window(2)(3) [7:0] $end
   $var wire  8 1 window(2)(4) [7:0] $end
   $var wire  8 2 window(3)(0) [7:0] $end
   $var wire  8 3 window(3)(1) [7:0] $end
   $var wire  8 4 window(3)(2) [7:0] $end
   $var wire  8 5 window(3)(3) [7:0] $end
   $var wire  8 6 window(3)(4) [7:0] $end
   $var wire  8 7 window(4)(0) [7:0] $end
   $var wire  8 8 window(4)(1) [7:0] $end
   $var wire  8 9 window(4)(2) [7:0] $end
   $var wire  8 : window(4)(3) [7:0] $end
   $var wire  8 ; window(4)(4) [7:0] $end
   $var wire  8 v! window_in(0) [7:0] $end
   $var wire  8 w! window_in(1) [7:0] $end
   $var wire  8 x! window_in(2) [7:0] $end
   $var wire  8 y! window_in(3) [7:0] $end
   $var wire  8 z! window_in(4) [7:0] $end
   $var wire  8 > window_out(0) [7:0] $end
   $var wire  8 ? window_out(1) [7:0] $end
   $var wire  8 @ window_out(2) [7:0] $end
   $var wire  8 A window_out(3) [7:0] $end
   $var wire  8 B window_out(4) [7:0] $end
   $var wire  5 "" wr_addr [4:0] $end
   $scope module genblk2(0) $end
    $scope module graylinebuffer_U $end
     $var wire  8 D buffer(0) [7:0] $end
     $var wire  8 E buffer(1) [7:0] $end
     $var wire  8 N buffer(10) [7:0] $end
     $var wire  8 O buffer(11) [7:0] $end
     $var wire  8 P buffer(12) [7:0] $end
     $var wire  8 Q buffer(13) [7:0] $end
     $var wire  8 R buffer(14) [7:0] $end
     $var wire  8 S buffer(15) [7:0] $end
     $var wire  8 T buffer(16) [7:0] $end
     $var wire  8 U buffer(17) [7:0] $end
     $var wire  8 V buffer(18) [7:0] $end
     $var wire  8 W buffer(19) [7:0] $end
     $var wire  8 F buffer(2) [7:0] $end
     $var wire  8 X buffer(20) [7:0] $end
     $var wire  8 Y buffer(21) [7:0] $end
     $var wire  8 Z buffer(22) [7:0] $end
     $var wire  8 [ buffer(23) [7:0] $end
     $var wire  8 \ buffer(24) [7:0] $end
     $var wire  8 ] buffer(25) [7:0] $end
     $var wire  8 ^ buffer(26) [7:0] $end
     $var wire  8 _ buffer(27) [7:0] $end
     $var wire  8 G buffer(3) [7:0] $end
     $var wire  8 H buffer(4) [7:0] $end
     $var wire  8 I buffer(5) [7:0] $end
     $var wire  8 J buffer(6) [7:0] $end
     $var wire  8 K buffer(7) [7:0] $end
     $var wire  8 L buffer(8) [7:0] $end
     $var wire  8 M buffer(9) [7:0] $end
     $var wire  1 %" clkr $end
     $var wire  1 %" clkw $end
     $var wire  8 {! din [7:0] $end
     $var wire  8 C dout [7:0] $end
     $var wire  1 )" r_en $end
     $var wire  5 #" raddr [4:0] $end
     $var wire  1 (" w_en $end
     $var wire  5 "" waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk2(1) $end
    $scope module graylinebuffer_U $end
     $var wire  8 a buffer(0) [7:0] $end
     $var wire  8 b buffer(1) [7:0] $end
     $var wire  8 k buffer(10) [7:0] $end
     $var wire  8 l buffer(11) [7:0] $end
     $var wire  8 m buffer(12) [7:0] $end
     $var wire  8 n buffer(13) [7:0] $end
     $var wire  8 o buffer(14) [7:0] $end
     $var wire  8 p buffer(15) [7:0] $end
     $var wire  8 q buffer(16) [7:0] $end
     $var wire  8 r buffer(17) [7:0] $end
     $var wire  8 s buffer(18) [7:0] $end
     $var wire  8 t buffer(19) [7:0] $end
     $var wire  8 c buffer(2) [7:0] $end
     $var wire  8 u buffer(20) [7:0] $end
     $var wire  8 v buffer(21) [7:0] $end
     $var wire  8 w buffer(22) [7:0] $end
     $var wire  8 x buffer(23) [7:0] $end
     $var wire  8 y buffer(24) [7:0] $end
     $var wire  8 z buffer(25) [7:0] $end
     $var wire  8 { buffer(26) [7:0] $end
     $var wire  8 | buffer(27) [7:0] $end
     $var wire  8 d buffer(3) [7:0] $end
     $var wire  8 e buffer(4) [7:0] $end
     $var wire  8 f buffer(5) [7:0] $end
     $var wire  8 g buffer(6) [7:0] $end
     $var wire  8 h buffer(7) [7:0] $end
     $var wire  8 i buffer(8) [7:0] $end
     $var wire  8 j buffer(9) [7:0] $end
     $var wire  1 %" clkr $end
     $var wire  1 %" clkw $end
     $var wire  8 |! din [7:0] $end
     $var wire  8 ` dout [7:0] $end
     $var wire  1 )" r_en $end
     $var wire  5 #" raddr [4:0] $end
     $var wire  1 (" w_en $end
     $var wire  5 "" waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk2(2) $end
    $scope module graylinebuffer_U $end
     $var wire  8 ~ buffer(0) [7:0] $end
     $var wire  8 !! buffer(1) [7:0] $end
     $var wire  8 *! buffer(10) [7:0] $end
     $var wire  8 +! buffer(11) [7:0] $end
     $var wire  8 ,! buffer(12) [7:0] $end
     $var wire  8 -! buffer(13) [7:0] $end
     $var wire  8 .! buffer(14) [7:0] $end
     $var wire  8 /! buffer(15) [7:0] $end
     $var wire  8 0! buffer(16) [7:0] $end
     $var wire  8 1! buffer(17) [7:0] $end
     $var wire  8 2! buffer(18) [7:0] $end
     $var wire  8 3! buffer(19) [7:0] $end
     $var wire  8 "! buffer(2) [7:0] $end
     $var wire  8 4! buffer(20) [7:0] $end
     $var wire  8 5! buffer(21) [7:0] $end
     $var wire  8 6! buffer(22) [7:0] $end
     $var wire  8 7! buffer(23) [7:0] $end
     $var wire  8 8! buffer(24) [7:0] $end
     $var wire  8 9! buffer(25) [7:0] $end
     $var wire  8 :! buffer(26) [7:0] $end
     $var wire  8 ;! buffer(27) [7:0] $end
     $var wire  8 #! buffer(3) [7:0] $end
     $var wire  8 $! buffer(4) [7:0] $end
     $var wire  8 %! buffer(5) [7:0] $end
     $var wire  8 &! buffer(6) [7:0] $end
     $var wire  8 '! buffer(7) [7:0] $end
     $var wire  8 (! buffer(8) [7:0] $end
     $var wire  8 )! buffer(9) [7:0] $end
     $var wire  1 %" clkr $end
     $var wire  1 %" clkw $end
     $var wire  8 }! din [7:0] $end
     $var wire  8 } dout [7:0] $end
     $var wire  1 )" r_en $end
     $var wire  5 #" raddr [4:0] $end
     $var wire  1 (" w_en $end
     $var wire  5 "" waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk2(3) $end
    $scope module graylinebuffer_U $end
     $var wire  8 =! buffer(0) [7:0] $end
     $var wire  8 >! buffer(1) [7:0] $end
     $var wire  8 G! buffer(10) [7:0] $end
     $var wire  8 H! buffer(11) [7:0] $end
     $var wire  8 I! buffer(12) [7:0] $end
     $var wire  8 J! buffer(13) [7:0] $end
     $var wire  8 K! buffer(14) [7:0] $end
     $var wire  8 L! buffer(15) [7:0] $end
     $var wire  8 M! buffer(16) [7:0] $end
     $var wire  8 N! buffer(17) [7:0] $end
     $var wire  8 O! buffer(18) [7:0] $end
     $var wire  8 P! buffer(19) [7:0] $end
     $var wire  8 ?! buffer(2) [7:0] $end
     $var wire  8 Q! buffer(20) [7:0] $end
     $var wire  8 R! buffer(21) [7:0] $end
     $var wire  8 S! buffer(22) [7:0] $end
     $var wire  8 T! buffer(23) [7:0] $end
     $var wire  8 U! buffer(24) [7:0] $end
     $var wire  8 V! buffer(25) [7:0] $end
     $var wire  8 W! buffer(26) [7:0] $end
     $var wire  8 X! buffer(27) [7:0] $end
     $var wire  8 @! buffer(3) [7:0] $end
     $var wire  8 A! buffer(4) [7:0] $end
     $var wire  8 B! buffer(5) [7:0] $end
     $var wire  8 C! buffer(6) [7:0] $end
     $var wire  8 D! buffer(7) [7:0] $end
     $var wire  8 E! buffer(8) [7:0] $end
     $var wire  8 F! buffer(9) [7:0] $end
     $var wire  1 %" clkr $end
     $var wire  1 %" clkw $end
     $var wire  8 ~! din [7:0] $end
     $var wire  8 <! dout [7:0] $end
     $var wire  1 )" r_en $end
     $var wire  5 #" raddr [4:0] $end
     $var wire  1 (" w_en $end
     $var wire  5 "" waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk2(4) $end
    $scope module graylinebuffer_U $end
     $var wire  8 Z! buffer(0) [7:0] $end
     $var wire  8 [! buffer(1) [7:0] $end
     $var wire  8 d! buffer(10) [7:0] $end
     $var wire  8 e! buffer(11) [7:0] $end
     $var wire  8 f! buffer(12) [7:0] $end
     $var wire  8 g! buffer(13) [7:0] $end
     $var wire  8 h! buffer(14) [7:0] $end
     $var wire  8 i! buffer(15) [7:0] $end
     $var wire  8 j! buffer(16) [7:0] $end
     $var wire  8 k! buffer(17) [7:0] $end
     $var wire  8 l! buffer(18) [7:0] $end
     $var wire  8 m! buffer(19) [7:0] $end
     $var wire  8 \! buffer(2) [7:0] $end
     $var wire  8 n! buffer(20) [7:0] $end
     $var wire  8 o! buffer(21) [7:0] $end
     $var wire  8 p! buffer(22) [7:0] $end
     $var wire  8 q! buffer(23) [7:0] $end
     $var wire  8 r! buffer(24) [7:0] $end
     $var wire  8 s! buffer(25) [7:0] $end
     $var wire  8 t! buffer(26) [7:0] $end
     $var wire  8 u! buffer(27) [7:0] $end
     $var wire  8 ]! buffer(3) [7:0] $end
     $var wire  8 ^! buffer(4) [7:0] $end
     $var wire  8 _! buffer(5) [7:0] $end
     $var wire  8 `! buffer(6) [7:0] $end
     $var wire  8 a! buffer(7) [7:0] $end
     $var wire  8 b! buffer(8) [7:0] $end
     $var wire  8 c! buffer(9) [7:0] $end
     $var wire  1 %" clkr $end
     $var wire  1 %" clkw $end
     $var wire  8 !" din [7:0] $end
     $var wire  8 Y! dout [7:0] $end
     $var wire  1 )" r_en $end
     $var wire  5 #" raddr [4:0] $end
     $var wire  1 (" w_en $end
     $var wire  5 "" waddr [4:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000 #
b00000000 $
b00000000 %
b00000000 &
b00000000 '
b00000000 (
b00000000 )
b00000000 *
b00000000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
b00000000 5
b00000000 6
b00000000 7
b00000000 8
b00000000 9
b00000000 :
b00000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000 >
b00000000 ?
b00000000 @
b00000000 A
b00000000 B
b00000000 C
b00000000 D
b00000000 E
b00000000 F
b00000000 G
b00000000 H
b00000000 I
b00000000 J
b00000000 K
b00000000 L
b00000000 M
b00000000 N
b00000000 O
b00000000 P
b00000000 Q
b00000000 R
b00000000 S
b00000000 T
b00000000 U
b00000000 V
b00000000 W
b00000000 X
b00000000 Y
b00000000 Z
b00000000 [
b00000000 \
b00000000 ]
b00000000 ^
b00000000 _
b00000000 `
b00000000 a
b00000000 b
b00000000 c
b00000000 d
b00000000 e
b00000000 f
b00000000 g
b00000000 h
b00000000 i
b00000000 j
b00000000 k
b00000000 l
b00000000 m
b00000000 n
b00000000 o
b00000000 p
b00000000 q
b00000000 r
b00000000 s
b00000000 t
b00000000 u
b00000000 v
b00000000 w
b00000000 x
b00000000 y
b00000000 z
b00000000 {
b00000000 |
b00000000 }
b00000000 ~
b00000000 !!
b00000000 "!
b00000000 #!
b00000000 $!
b00000000 %!
b00000000 &!
b00000000 '!
b00000000 (!
b00000000 )!
b00000000 *!
b00000000 +!
b00000000 ,!
b00000000 -!
b00000000 .!
b00000000 /!
b00000000 0!
b00000000 1!
b00000000 2!
b00000000 3!
b00000000 4!
b00000000 5!
b00000000 6!
b00000000 7!
b00000000 8!
b00000000 9!
b00000000 :!
b00000000 ;!
b00000000 <!
b00000000 =!
b00000000 >!
b00000000 ?!
b00000000 @!
b00000000 A!
b00000000 B!
b00000000 C!
b00000000 D!
b00000000 E!
b00000000 F!
b00000000 G!
b00000000 H!
b00000000 I!
b00000000 J!
b00000000 K!
b00000000 L!
b00000000 M!
b00000000 N!
b00000000 O!
b00000000 P!
b00000000 Q!
b00000000 R!
b00000000 S!
b00000000 T!
b00000000 U!
b00000000 V!
b00000000 W!
b00000000 X!
b00000000 Y!
b00000000 Z!
b00000000 [!
b00000000 \!
b00000000 ]!
b00000000 ^!
b00000000 _!
b00000000 `!
b00000000 a!
b00000000 b!
b00000000 c!
b00000000 d!
b00000000 e!
b00000000 f!
b00000000 g!
b00000000 h!
b00000000 i!
b00000000 j!
b00000000 k!
b00000000 l!
b00000000 m!
b00000000 n!
b00000000 o!
b00000000 p!
b00000000 q!
b00000000 r!
b00000000 s!
b00000000 t!
b00000000 u!
b00000000 v!
b00000000 w!
b00000000 x!
b00000000 y!
b00000000 z!
b00000000 {!
b00000000 |!
b00000000 }!
b00000000 ~!
b00000000 !"
b00000 ""
b00000 #"
b00010 $"
0%"
0&"
b00000000 '"
0("
1)"
#1
b00000000000000000000000000000101 <
b00000000000000000000000000000101 =
1%"
#2
0%"
1&"
#3
1%"
#4
0%"
#5
1%"
#6
0%"
#7
1%"
#8
0%"
#9
1%"
#10
0%"
#11
1%"
#12
0%"
#13
1%"
#14
0%"
#15
1%"
#16
0%"
#17
1%"
#18
0%"
#19
1%"
#20
0%"
#21
1%"
#22
0%"
#23
1%"
#24
0%"
#25
1%"
#26
0%"
#27
1%"
#28
0%"
#29
1%"
#30
0%"
#31
1%"
#32
0%"
#33
1%"
#34
0%"
#35
1%"
#36
0%"
#37
1%"
#38
0%"
#39
1%"
#40
0%"
#41
1%"
#42
0%"
#43
1%"
#44
0%"
#45
1%"
#46
0%"
#47
1%"
#48
0%"
#49
1%"
#50
0%"
#51
1%"
#52
0%"
#53
1%"
#54
0%"
#55
1%"
#56
0%"
#57
1%"
#58
0%"
#59
1%"
#60
0%"
#61
1%"
#62
0%"
#63
1%"
#64
0%"
#65
1%"
#66
0%"
#67
1%"
#68
0%"
#69
1%"
#70
0%"
#71
1%"
#72
0%"
#73
1%"
#74
0%"
#75
1%"
#76
0%"
#77
1%"
#78
0%"
#79
1%"
#80
0%"
#81
1%"
#82
0%"
#83
1%"
#84
0%"
#85
1%"
#86
0%"
#87
1%"
#88
0%"
#89
1%"
#90
0%"
#91
1%"
#92
0%"
#93
1%"
#94
0%"
#95
1%"
#96
0%"
#97
1%"
#98
0%"
#99
1%"
#100
0%"
#101
1%"
#102
0%"
#103
1%"
#104
0%"
#105
1%"
#106
0%"
#107
1%"
#108
0%"
#109
1%"
#110
0%"
#111
1%"
#112
0%"
#113
1%"
#114
0%"
#115
1%"
#116
0%"
#117
1%"
#118
0%"
#119
1%"
#120
0%"
#121
1%"
#122
0%"
#123
1%"
#124
0%"
#125
1%"
#126
0%"
#127
1%"
#128
0%"
#129
1%"
#130
0%"
#131
1%"
#132
0%"
#133
1%"
#134
0%"
#135
1%"
#136
0%"
#137
1%"
#138
0%"
#139
1%"
#140
0%"
#141
1%"
#142
0%"
#143
1%"
#144
0%"
#145
1%"
#146
0%"
#147
1%"
#148
0%"
#149
1%"
#150
0%"
#151
1%"
#152
0%"
#153
1%"
#154
0%"
#155
1%"
#156
0%"
#157
1%"
#158
0%"
#159
1%"
#160
0%"
#161
1%"
#162
0%"
#163
1%"
#164
0%"
#165
1%"
#166
0%"
#167
1%"
#168
0%"
#169
1%"
#170
0%"
#171
1%"
#172
0%"
#173
1%"
#174
0%"
#175
1%"
#176
0%"
#177
1%"
#178
0%"
#179
1%"
#180
0%"
#181
1%"
#182
0%"
#183
1%"
#184
0%"
#185
1%"
#186
0%"
#187
1%"
#188
0%"
#189
1%"
#190
0%"
#191
1%"
#192
0%"
#193
1%"
#194
0%"
#195
1%"
#196
0%"
#197
1%"
#198
0%"
#199
1%"
#200
0%"
#201
1%"
#202
0%"
#203
1%"
#204
0%"
#205
1%"
#206
0%"
#207
1%"
#208
0%"
#209
1%"
#210
0%"
#211
1%"
#212
0%"
#213
1%"
#214
0%"
#215
1%"
#216
0%"
#217
1%"
#218
0%"
#219
1%"
#220
0%"
#221
1%"
#222
0%"
#223
1%"
#224
0%"
#225
1%"
#226
0%"
#227
1%"
#228
0%"
#229
1%"
#230
0%"
#231
1%"
#232
0%"
#233
1%"
#234
0%"
#235
1%"
#236
0%"
#237
1%"
#238
0%"
#239
1%"
#240
0%"
#241
1%"
#242
0%"
#243
1%"
#244
0%"
#245
1%"
#246
0%"
#247
1%"
#248
0%"
#249
1%"
#250
0%"
#251
1%"
#252
0%"
#253
1%"
#254
0%"
#255
1%"
#256
0%"
#257
1%"
#258
0%"
#259
1%"
#260
0%"
#261
1%"
#262
0%"
#263
1%"
#264
0%"
#265
1%"
#266
0%"
#267
1%"
#268
0%"
#269
1%"
#270
0%"
#271
1%"
#272
0%"
#273
1%"
#274
0%"
#275
1%"
#276
0%"
#277
1%"
#278
0%"
#279
1%"
#280
0%"
#281
1%"
#282
0%"
#283
1%"
#284
0%"
#285
1%"
#286
0%"
#287
1%"
#288
0%"
#289
1%"
#290
0%"
#291
1%"
#292
0%"
#293
1%"
#294
0%"
#295
1%"
#296
0%"
#297
1%"
#298
0%"
#299
1%"
#300
0%"
