$version Generated by VerilatedVcd $end
$date Wed Mar 29 23:03:17 2023 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 w" clk $end
  $var wire  8 y" cnn_data_in [7:0] $end
  $var wire  1 z" cnn_data_in_valid $end
  $var wire 32 {" cnn_data_out [31:0] $end
  $var wire  1 |" cnn_data_out_valid $end
  $var wire  1 x" rst_n $end
  $scope module conv1 $end
   $var wire 16 8" c1_w_1(0)(0) [15:0] $end
   $var wire 16 9" c1_w_1(0)(1) [15:0] $end
   $var wire 16 :" c1_w_1(0)(2) [15:0] $end
   $var wire 16 ;" c1_w_1(0)(3) [15:0] $end
   $var wire 16 <" c1_w_1(0)(4) [15:0] $end
   $var wire 16 =" c1_w_1(1)(0) [15:0] $end
   $var wire 16 >" c1_w_1(1)(1) [15:0] $end
   $var wire 16 ?" c1_w_1(1)(2) [15:0] $end
   $var wire 16 @" c1_w_1(1)(3) [15:0] $end
   $var wire 16 A" c1_w_1(1)(4) [15:0] $end
   $var wire 16 B" c1_w_1(2)(0) [15:0] $end
   $var wire 16 C" c1_w_1(2)(1) [15:0] $end
   $var wire 16 D" c1_w_1(2)(2) [15:0] $end
   $var wire 16 E" c1_w_1(2)(3) [15:0] $end
   $var wire 16 F" c1_w_1(2)(4) [15:0] $end
   $var wire 16 G" c1_w_1(3)(0) [15:0] $end
   $var wire 16 H" c1_w_1(3)(1) [15:0] $end
   $var wire 16 I" c1_w_1(3)(2) [15:0] $end
   $var wire 16 J" c1_w_1(3)(3) [15:0] $end
   $var wire 16 K" c1_w_1(3)(4) [15:0] $end
   $var wire 16 L" c1_w_1(4)(0) [15:0] $end
   $var wire 16 M" c1_w_1(4)(1) [15:0] $end
   $var wire 16 N" c1_w_1(4)(2) [15:0] $end
   $var wire 16 O" c1_w_1(4)(3) [15:0] $end
   $var wire 16 P" c1_w_1(4)(4) [15:0] $end
   $var wire  1 }" c1_w_rd_en $end
   $var wire  1 w" clk $end
   $var wire  8 y" cnn_data_in [7:0] $end
   $var wire  1 z" cnn_data_in_valid $end
   $var wire 32 {" cnn_data_out [31:0] $end
   $var wire  1 |" cnn_data_out_valid $end
   $var wire  1 l" data_out_valid_o $end
   $var wire  1 A delay_data_out_valid_o $end
   $var wire 32 3" i [31:0] $end
   $var wire 32 4" j [31:0] $end
   $var wire  5 v! rd_addr [4:0] $end
   $var wire  5 w! rd_addr_pre2 [4:0] $end
   $var wire 16 7" rd_c1_w_1_data [15:0] $end
   $var wire  5 Q" rom_cnt [4:0] $end
   $var wire  1 x" rst_n $end
   $var wire  8 x! window(0)(0) [7:0] $end
   $var wire  8 y! window(0)(1) [7:0] $end
   $var wire  8 z! window(0)(2) [7:0] $end
   $var wire  8 {! window(0)(3) [7:0] $end
   $var wire  8 |! window(0)(4) [7:0] $end
   $var wire  8 }! window(1)(0) [7:0] $end
   $var wire  8 ~! window(1)(1) [7:0] $end
   $var wire  8 !" window(1)(2) [7:0] $end
   $var wire  8 "" window(1)(3) [7:0] $end
   $var wire  8 #" window(1)(4) [7:0] $end
   $var wire  8 $" window(2)(0) [7:0] $end
   $var wire  8 %" window(2)(1) [7:0] $end
   $var wire  8 &" window(2)(2) [7:0] $end
   $var wire  8 '" window(2)(3) [7:0] $end
   $var wire  8 (" window(2)(4) [7:0] $end
   $var wire  8 )" window(3)(0) [7:0] $end
   $var wire  8 *" window(3)(1) [7:0] $end
   $var wire  8 +" window(3)(2) [7:0] $end
   $var wire  8 ," window(3)(3) [7:0] $end
   $var wire  8 -" window(3)(4) [7:0] $end
   $var wire  8 ." window(4)(0) [7:0] $end
   $var wire  8 /" window(4)(1) [7:0] $end
   $var wire  8 0" window(4)(2) [7:0] $end
   $var wire  8 1" window(4)(3) [7:0] $end
   $var wire  8 2" window(4)(4) [7:0] $end
   $var wire  8 m" window_in(0) [7:0] $end
   $var wire  8 n" window_in(1) [7:0] $end
   $var wire  8 o" window_in(2) [7:0] $end
   $var wire  8 p" window_in(3) [7:0] $end
   $var wire  8 q" window_in(4) [7:0] $end
   $var wire 32 R" window_mul_result_1(0)(0) [31:0] $end
   $var wire 32 S" window_mul_result_1(0)(1) [31:0] $end
   $var wire 32 T" window_mul_result_1(0)(2) [31:0] $end
   $var wire 32 U" window_mul_result_1(0)(3) [31:0] $end
   $var wire 32 V" window_mul_result_1(0)(4) [31:0] $end
   $var wire 32 W" window_mul_result_1(1)(0) [31:0] $end
   $var wire 32 X" window_mul_result_1(1)(1) [31:0] $end
   $var wire 32 Y" window_mul_result_1(1)(2) [31:0] $end
   $var wire 32 Z" window_mul_result_1(1)(3) [31:0] $end
   $var wire 32 [" window_mul_result_1(1)(4) [31:0] $end
   $var wire 32 \" window_mul_result_1(2)(0) [31:0] $end
   $var wire 32 ]" window_mul_result_1(2)(1) [31:0] $end
   $var wire 32 ^" window_mul_result_1(2)(2) [31:0] $end
   $var wire 32 _" window_mul_result_1(2)(3) [31:0] $end
   $var wire 32 `" window_mul_result_1(2)(4) [31:0] $end
   $var wire 32 a" window_mul_result_1(3)(0) [31:0] $end
   $var wire 32 b" window_mul_result_1(3)(1) [31:0] $end
   $var wire 32 c" window_mul_result_1(3)(2) [31:0] $end
   $var wire 32 d" window_mul_result_1(3)(3) [31:0] $end
   $var wire 32 e" window_mul_result_1(3)(4) [31:0] $end
   $var wire 32 f" window_mul_result_1(4)(0) [31:0] $end
   $var wire 32 g" window_mul_result_1(4)(1) [31:0] $end
   $var wire 32 h" window_mul_result_1(4)(2) [31:0] $end
   $var wire 32 i" window_mul_result_1(4)(3) [31:0] $end
   $var wire 32 j" window_mul_result_1(4)(4) [31:0] $end
   $var wire  8 < window_out(0) [7:0] $end
   $var wire  8 = window_out(1) [7:0] $end
   $var wire  8 > window_out(2) [7:0] $end
   $var wire  8 ? window_out(3) [7:0] $end
   $var wire  8 @ window_out(4) [7:0] $end
   $var wire 32 k" window_sum_1 [31:0] $end
   $var wire  5 u! wr_addr [4:0] $end
   $var wire  5 5" x_cnt [4:0] $end
   $var wire  5 6" y_cnt [4:0] $end
   $scope module genblk2(0) $end
    $scope module graylinebuffer_U $end
     $var wire  8 C buffer(0) [7:0] $end
     $var wire  8 D buffer(1) [7:0] $end
     $var wire  8 M buffer(10) [7:0] $end
     $var wire  8 N buffer(11) [7:0] $end
     $var wire  8 O buffer(12) [7:0] $end
     $var wire  8 P buffer(13) [7:0] $end
     $var wire  8 Q buffer(14) [7:0] $end
     $var wire  8 R buffer(15) [7:0] $end
     $var wire  8 S buffer(16) [7:0] $end
     $var wire  8 T buffer(17) [7:0] $end
     $var wire  8 U buffer(18) [7:0] $end
     $var wire  8 V buffer(19) [7:0] $end
     $var wire  8 E buffer(2) [7:0] $end
     $var wire  8 W buffer(20) [7:0] $end
     $var wire  8 X buffer(21) [7:0] $end
     $var wire  8 Y buffer(22) [7:0] $end
     $var wire  8 Z buffer(23) [7:0] $end
     $var wire  8 [ buffer(24) [7:0] $end
     $var wire  8 \ buffer(25) [7:0] $end
     $var wire  8 ] buffer(26) [7:0] $end
     $var wire  8 ^ buffer(27) [7:0] $end
     $var wire  8 F buffer(3) [7:0] $end
     $var wire  8 G buffer(4) [7:0] $end
     $var wire  8 H buffer(5) [7:0] $end
     $var wire  8 I buffer(6) [7:0] $end
     $var wire  8 J buffer(7) [7:0] $end
     $var wire  8 K buffer(8) [7:0] $end
     $var wire  8 L buffer(9) [7:0] $end
     $var wire  1 w" clkr $end
     $var wire  1 w" clkw $end
     $var wire  8 r" din [7:0] $end
     $var wire  8 B dout [7:0] $end
     $var wire  1 }" r_en $end
     $var wire  5 v! raddr [4:0] $end
     $var wire  1 z" w_en $end
     $var wire  5 u! waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk2(1) $end
    $scope module graylinebuffer_U $end
     $var wire  8 ` buffer(0) [7:0] $end
     $var wire  8 a buffer(1) [7:0] $end
     $var wire  8 j buffer(10) [7:0] $end
     $var wire  8 k buffer(11) [7:0] $end
     $var wire  8 l buffer(12) [7:0] $end
     $var wire  8 m buffer(13) [7:0] $end
     $var wire  8 n buffer(14) [7:0] $end
     $var wire  8 o buffer(15) [7:0] $end
     $var wire  8 p buffer(16) [7:0] $end
     $var wire  8 q buffer(17) [7:0] $end
     $var wire  8 r buffer(18) [7:0] $end
     $var wire  8 s buffer(19) [7:0] $end
     $var wire  8 b buffer(2) [7:0] $end
     $var wire  8 t buffer(20) [7:0] $end
     $var wire  8 u buffer(21) [7:0] $end
     $var wire  8 v buffer(22) [7:0] $end
     $var wire  8 w buffer(23) [7:0] $end
     $var wire  8 x buffer(24) [7:0] $end
     $var wire  8 y buffer(25) [7:0] $end
     $var wire  8 z buffer(26) [7:0] $end
     $var wire  8 { buffer(27) [7:0] $end
     $var wire  8 c buffer(3) [7:0] $end
     $var wire  8 d buffer(4) [7:0] $end
     $var wire  8 e buffer(5) [7:0] $end
     $var wire  8 f buffer(6) [7:0] $end
     $var wire  8 g buffer(7) [7:0] $end
     $var wire  8 h buffer(8) [7:0] $end
     $var wire  8 i buffer(9) [7:0] $end
     $var wire  1 w" clkr $end
     $var wire  1 w" clkw $end
     $var wire  8 s" din [7:0] $end
     $var wire  8 _ dout [7:0] $end
     $var wire  1 }" r_en $end
     $var wire  5 v! raddr [4:0] $end
     $var wire  1 z" w_en $end
     $var wire  5 u! waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk2(2) $end
    $scope module graylinebuffer_U $end
     $var wire  8 } buffer(0) [7:0] $end
     $var wire  8 ~ buffer(1) [7:0] $end
     $var wire  8 )! buffer(10) [7:0] $end
     $var wire  8 *! buffer(11) [7:0] $end
     $var wire  8 +! buffer(12) [7:0] $end
     $var wire  8 ,! buffer(13) [7:0] $end
     $var wire  8 -! buffer(14) [7:0] $end
     $var wire  8 .! buffer(15) [7:0] $end
     $var wire  8 /! buffer(16) [7:0] $end
     $var wire  8 0! buffer(17) [7:0] $end
     $var wire  8 1! buffer(18) [7:0] $end
     $var wire  8 2! buffer(19) [7:0] $end
     $var wire  8 !! buffer(2) [7:0] $end
     $var wire  8 3! buffer(20) [7:0] $end
     $var wire  8 4! buffer(21) [7:0] $end
     $var wire  8 5! buffer(22) [7:0] $end
     $var wire  8 6! buffer(23) [7:0] $end
     $var wire  8 7! buffer(24) [7:0] $end
     $var wire  8 8! buffer(25) [7:0] $end
     $var wire  8 9! buffer(26) [7:0] $end
     $var wire  8 :! buffer(27) [7:0] $end
     $var wire  8 "! buffer(3) [7:0] $end
     $var wire  8 #! buffer(4) [7:0] $end
     $var wire  8 $! buffer(5) [7:0] $end
     $var wire  8 %! buffer(6) [7:0] $end
     $var wire  8 &! buffer(7) [7:0] $end
     $var wire  8 '! buffer(8) [7:0] $end
     $var wire  8 (! buffer(9) [7:0] $end
     $var wire  1 w" clkr $end
     $var wire  1 w" clkw $end
     $var wire  8 t" din [7:0] $end
     $var wire  8 | dout [7:0] $end
     $var wire  1 }" r_en $end
     $var wire  5 v! raddr [4:0] $end
     $var wire  1 z" w_en $end
     $var wire  5 u! waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk2(3) $end
    $scope module graylinebuffer_U $end
     $var wire  8 <! buffer(0) [7:0] $end
     $var wire  8 =! buffer(1) [7:0] $end
     $var wire  8 F! buffer(10) [7:0] $end
     $var wire  8 G! buffer(11) [7:0] $end
     $var wire  8 H! buffer(12) [7:0] $end
     $var wire  8 I! buffer(13) [7:0] $end
     $var wire  8 J! buffer(14) [7:0] $end
     $var wire  8 K! buffer(15) [7:0] $end
     $var wire  8 L! buffer(16) [7:0] $end
     $var wire  8 M! buffer(17) [7:0] $end
     $var wire  8 N! buffer(18) [7:0] $end
     $var wire  8 O! buffer(19) [7:0] $end
     $var wire  8 >! buffer(2) [7:0] $end
     $var wire  8 P! buffer(20) [7:0] $end
     $var wire  8 Q! buffer(21) [7:0] $end
     $var wire  8 R! buffer(22) [7:0] $end
     $var wire  8 S! buffer(23) [7:0] $end
     $var wire  8 T! buffer(24) [7:0] $end
     $var wire  8 U! buffer(25) [7:0] $end
     $var wire  8 V! buffer(26) [7:0] $end
     $var wire  8 W! buffer(27) [7:0] $end
     $var wire  8 ?! buffer(3) [7:0] $end
     $var wire  8 @! buffer(4) [7:0] $end
     $var wire  8 A! buffer(5) [7:0] $end
     $var wire  8 B! buffer(6) [7:0] $end
     $var wire  8 C! buffer(7) [7:0] $end
     $var wire  8 D! buffer(8) [7:0] $end
     $var wire  8 E! buffer(9) [7:0] $end
     $var wire  1 w" clkr $end
     $var wire  1 w" clkw $end
     $var wire  8 u" din [7:0] $end
     $var wire  8 ;! dout [7:0] $end
     $var wire  1 }" r_en $end
     $var wire  5 v! raddr [4:0] $end
     $var wire  1 z" w_en $end
     $var wire  5 u! waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk2(4) $end
    $scope module graylinebuffer_U $end
     $var wire  8 Y! buffer(0) [7:0] $end
     $var wire  8 Z! buffer(1) [7:0] $end
     $var wire  8 c! buffer(10) [7:0] $end
     $var wire  8 d! buffer(11) [7:0] $end
     $var wire  8 e! buffer(12) [7:0] $end
     $var wire  8 f! buffer(13) [7:0] $end
     $var wire  8 g! buffer(14) [7:0] $end
     $var wire  8 h! buffer(15) [7:0] $end
     $var wire  8 i! buffer(16) [7:0] $end
     $var wire  8 j! buffer(17) [7:0] $end
     $var wire  8 k! buffer(18) [7:0] $end
     $var wire  8 l! buffer(19) [7:0] $end
     $var wire  8 [! buffer(2) [7:0] $end
     $var wire  8 m! buffer(20) [7:0] $end
     $var wire  8 n! buffer(21) [7:0] $end
     $var wire  8 o! buffer(22) [7:0] $end
     $var wire  8 p! buffer(23) [7:0] $end
     $var wire  8 q! buffer(24) [7:0] $end
     $var wire  8 r! buffer(25) [7:0] $end
     $var wire  8 s! buffer(26) [7:0] $end
     $var wire  8 t! buffer(27) [7:0] $end
     $var wire  8 \! buffer(3) [7:0] $end
     $var wire  8 ]! buffer(4) [7:0] $end
     $var wire  8 ^! buffer(5) [7:0] $end
     $var wire  8 _! buffer(6) [7:0] $end
     $var wire  8 `! buffer(7) [7:0] $end
     $var wire  8 a! buffer(8) [7:0] $end
     $var wire  8 b! buffer(9) [7:0] $end
     $var wire  1 w" clkr $end
     $var wire  1 w" clkw $end
     $var wire  8 v" din [7:0] $end
     $var wire  8 X! dout [7:0] $end
     $var wire  1 }" r_en $end
     $var wire  5 v! raddr [4:0] $end
     $var wire  1 z" w_en $end
     $var wire  5 u! waddr [4:0] $end
    $upscope $end
   $upscope $end
   $scope module weights_rom_u1 $end
    $var wire 80 ~" FILE_NAME [79:0] $end
    $var wire 16 # para_rom(0) [15:0] $end
    $var wire 16 $ para_rom(1) [15:0] $end
    $var wire 16 - para_rom(10) [15:0] $end
    $var wire 16 . para_rom(11) [15:0] $end
    $var wire 16 / para_rom(12) [15:0] $end
    $var wire 16 0 para_rom(13) [15:0] $end
    $var wire 16 1 para_rom(14) [15:0] $end
    $var wire 16 2 para_rom(15) [15:0] $end
    $var wire 16 3 para_rom(16) [15:0] $end
    $var wire 16 4 para_rom(17) [15:0] $end
    $var wire 16 5 para_rom(18) [15:0] $end
    $var wire 16 6 para_rom(19) [15:0] $end
    $var wire 16 % para_rom(2) [15:0] $end
    $var wire 16 7 para_rom(20) [15:0] $end
    $var wire 16 8 para_rom(21) [15:0] $end
    $var wire 16 9 para_rom(22) [15:0] $end
    $var wire 16 : para_rom(23) [15:0] $end
    $var wire 16 ; para_rom(24) [15:0] $end
    $var wire 16 & para_rom(3) [15:0] $end
    $var wire 16 ' para_rom(4) [15:0] $end
    $var wire 16 ( para_rom(5) [15:0] $end
    $var wire 16 ) para_rom(6) [15:0] $end
    $var wire 16 * para_rom(7) [15:0] $end
    $var wire 16 + para_rom(8) [15:0] $end
    $var wire 16 , para_rom(9) [15:0] $end
    $var wire 16 7" rom_dout [15:0] $end
    $var wire  1 }" rom_r_en $end
    $var wire  5 Q" rom_raddr [4:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


